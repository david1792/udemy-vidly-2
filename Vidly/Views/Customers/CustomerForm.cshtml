@model Vidly.ViewModels.CustomerFormViewModel
@{
    ViewBag.Title = "New";
}

<h2>New</h2>

@using (Html.BeginForm("Save", "Customers"))
{
    @Html.ValidationSummary(true, "please fix the following errors")
    @*if we want to list all the error, individual property errors use  @Html.ValidationSummary()
        if we want to show a universal error message use: @Html.ValidationSummary(true, "please fix the following errors")
        *@
    <div class="form-group">
                      @*'c' as a model goes to 'c' dot 'name'*@
        @Html.LabelFor(c => c.Customer.Name)
        @Html.TextBoxFor(c => c.Customer.Name, new {@class = "form-control"})@*i can pass an annonimous object and any properties we add to thi sobject will be rendered as an html attributes, if intellisense detect error maybe we use a reserver keyword like class, so we fix this add @*@
        @Html.ValidationMessageFor(c => c.Customer.Name)
    </div>
    <div class="form-group">
        @Html.LabelFor(c => c.Customer.MembershipTypeId)
        @Html.DropDownListFor(c => c.Customer.MembershipTypeId, new SelectList(Model.MembershipTypes, "Id", "Name"), "Select one prro", new { @class = "form-control" })
        @Html.ValidationMessageFor(c => c.Customer.MembershipTypeId)
        @*Membershipid has validation because is byte datatype and implicity is non nullable field, if we explore
         the dropdown,  "Select one prro" has no value and mvc framework send us and error modelstate*@
    </div>
    <div class="form-group">
        @Html.LabelFor(c => c.Customer.BirthDate)<br/>
        <label for="BirthDate">Date of birth 2dn alterantive</label>
        @Html.TextBoxFor(c => c.Customer.BirthDate, "{0:d MMM yyyy}", new { @class = "form-control" })@*i can pass an annonimous object and any properties we add to thi sobject will be rendered as an html attributes, if intellisense detect error maybe we use a reserver keyword like class, so we fix this add @*@
        @Html.ValidationMessageFor(c => c.Customer.BirthDate)
    </div>
    <div class="checkbox">
        <label>
            @Html.CheckBoxFor(c => c.Customer.IsSuscribedToNewsletter) subcribe to newsletter@*i can pass an annonimous object and any properties we add to thi sobject will be rendered as an html attributes, if intellisense detect error maybe we use a reserver keyword like class, so we fix this add @*@

        </label>
    </div>
    @*In this case we don't sent to the controller the id of the customer, to solve this, we add a new hidden input for the id
        By convention this hidden id after of submit button
        *@
    @Html.HiddenFor(c => c.Customer.Id)
    <button type="submit" class="btn bg-primary">Save</button>
} 

@section scripts
{
    @*
    if we need to add a few extra and basic field validation, mvc provide a jquery validation plugin to validate all field, the reason to do this is to send the less information to server to save resources
    *@
    @Scripts.Render("~/bundles/jqueryval");
    @*
        
    with this bundle we add extra validations binding with data anotations in ours models, html helper methods like TextBoxFor and ValidationMessageFor , and we have and extra validations with custom validations to add server side bussiness logic but this logic can't binding to  jquery val bundle
        so we delegate the validations, front side validates basic information and server side validate bussiness validations. if we press f12 and see the network tab, if exist error the form is not send to server :)
        *@

}
