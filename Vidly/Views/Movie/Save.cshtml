@using System.Web.UI.WebControls
@model Vidly.ViewModels.MovieFormViewModel

@{
    if (Model.Movie == null)
    {
        ViewBag.Title = "Save";
    }
    else
    {
        ViewBag.Title = "Edit";
    }
    

}

<h2>Save</h2>

@using (Html.BeginForm("Save", "Movie", FormMethod.Post))
{
    <div class="form-group">
        @*'m' as a model goes to 'm' dot 'Movie.DateAdded'*@
        @Html.LabelFor(m => m.Movie.DateAdded)
        @Html.TextBoxFor(m => m.Movie.DateAdded, new {@class = "form-control"})@*i can pass an annonimous object and any properties we add to thi sobject will be rendered as an html attributes, if intellisense detect error maybe we use a reserver keyword like class, so we fix this add @*@
    </div> 
    <div class="form-group">
        @Html.LabelFor(m => m.Movie.GenreId)
        @Html.DropDownListFor(m => m.Movie.GenreId, new SelectList(Model.Genres, "Id", "Description"), "Select one prro", new { @class = "form-control"})
    </div> 
    <div class="form-group">
        @Html.LabelFor(m => m.Movie.Name)
        @Html.TextBoxFor(m => m.Movie.Name, new {@class = "form-control"})@*i can pass an annonimous object and any properties we add to thi sobject will be rendered as an html attributes, if intellisense detect error maybe we use a reserver keyword like class, so we fix this add @*@
    </div> 
    <div class="form-group">
        @Html.LabelFor(m => m.Movie.ReleaseDate)
        @Html.TextBoxFor(m => m.Movie.ReleaseDate, new {@class = "form-control"})@*i can pass an annonimous object and any properties we add to thi sobject will be rendered as an html attributes, if intellisense detect error maybe we use a reserver keyword like class, so we fix this add @*@
    </div> 
    <div class="form-group">
        @Html.LabelFor(m => m.Movie.Stock)
        @Html.TextBoxFor(m => m.Movie.Stock, new {@class = "form-control"})@*i can pass an annonimous object and any properties we add to thi sobject will be rendered as an html attributes, if intellisense detect error maybe we use a reserver keyword like class, so we fix this add @*@
    </div> 
    @Html.HiddenFor(m => m.Movie.Id)
    <button type="submit">guardar</button>  

}